'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.placements = exports.InnerPopper = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = Popper;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _popper = require('popper.js');

var _popper2 = _interopRequireDefault(_popper);

var _Manager = require('./Manager');

var _utils = require('./utils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialStyle = {
  position: 'absolute',
  top: 0,
  left: 0,
  opacity: 0,
  pointerEvents: 'none'
};

var initialArrowStyle = {};

var InnerPopper = exports.InnerPopper = function (_React$Component) {
  (0, _inherits3.default)(InnerPopper, _React$Component);

  function InnerPopper() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, InnerPopper);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = InnerPopper.__proto__ || (0, _getPrototypeOf2.default)(InnerPopper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      popperNode: undefined,
      arrowNode: undefined,
      popperInstance: undefined,
      data: undefined
    }, _this.setPopperNode = function (popperNode) {
      (0, _utils.safeInvoke)(_this.props.innerRef, popperNode);
      _this.setState({ popperNode: popperNode });
    }, _this.setArrowNode = function (arrowNode) {
      return _this.setState({ arrowNode: arrowNode });
    }, _this.updateStateModifier = {
      enabled: true,
      order: 900,
      fn: function fn(data) {
        _this.setState({ data: data });
        return data;
      }
    }, _this.getOptions = function () {
      return {
        placement: _this.props.placement,
        eventsEnabled: _this.props.eventsEnabled,
        positionFixed: _this.props.positionFixed,
        modifiers: (0, _extends3.default)({}, _this.props.modifiers, {
          arrow: {
            enabled: !!_this.state.arrowNode,
            element: _this.state.arrowNode
          },
          applyStyle: { enabled: false },
          updateStateModifier: _this.updateStateModifier
        })
      };
    }, _this.getPopperStyle = function () {
      return !_this.state.popperNode || !_this.state.data ? initialStyle : (0, _extends3.default)({
        position: _this.state.data.offsets.popper.position
      }, _this.state.data.styles);
    }, _this.getPopperPlacement = function () {
      return !_this.state.data ? undefined : _this.state.data.placement;
    }, _this.getArrowStyle = function () {
      return !_this.state.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
    }, _this.getOutOfBoundariesState = function () {
      return _this.state.data ? _this.state.data.hide : undefined;
    }, _this.initPopperInstance = function () {
      var referenceElement = _this.props.referenceElement;
      var _this$state = _this.state,
          popperNode = _this$state.popperNode,
          popperInstance = _this$state.popperInstance;

      if (referenceElement && popperNode && !popperInstance) {
        var _popperInstance = new _popper2.default(referenceElement, popperNode, _this.getOptions());
        _this.setState({ popperInstance: _popperInstance });
        return true;
      }
      return false;
    }, _this.destroyPopperInstance = function (callback) {
      if (_this.state.popperInstance) {
        _this.state.popperInstance.destroy();
      }
      _this.setState({ popperInstance: undefined }, callback);
    }, _this.updatePopperInstance = function () {
      if (_this.state.popperInstance) {
        _this.destroyPopperInstance(function () {
          return _this.initPopperInstance();
        });
      }
    }, _this.scheduleUpdate = function () {
      if (_this.state.popperInstance) {
        _this.state.popperInstance.scheduleUpdate();
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(InnerPopper, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      // If needed, initialize the Popper.js instance
      // it will return `true` if it initialized a new instance, or `false` otherwise
      // if it returns `false`, we make sure Popper props haven't changed, and update
      // the Popper.js instance if needed
      if (!this.initPopperInstance()) {
        // If the Popper.js options have changed, update the instance (destroy + create)
        if (this.props.placement !== prevProps.placement || this.props.eventsEnabled !== prevProps.eventsEnabled || this.state.arrowNode !== prevState.arrowNode || this.state.popperNode !== prevState.popperNode || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {
          this.updatePopperInstance();
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.state.popperInstance) {
        this.state.popperInstance.destroy();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return (0, _utils.unwrapArray)(this.props.children)({
        ref: this.setPopperNode,
        style: this.getPopperStyle(),
        placement: this.getPopperPlacement(),
        outOfBoundaries: this.getOutOfBoundariesState(),
        scheduleUpdate: this.scheduleUpdate,
        arrowProps: {
          ref: this.setArrowNode,
          style: this.getArrowStyle()
        }
      });
    }
  }]);
  return InnerPopper;
}(React.Component);

InnerPopper.defaultProps = {
  placement: 'bottom',
  eventsEnabled: true,
  referenceElement: undefined,
  positionFixed: false
};


var placements = _popper2.default.placements;
exports.placements = placements;
function Popper(props) {
  return React.createElement(
    _Manager.ManagerContext.Consumer,
    null,
    function (_ref2) {
      var referenceNode = _ref2.referenceNode;
      return React.createElement(InnerPopper, (0, _extends3.default)({ referenceElement: referenceNode }, props));
    }
  );
}